name: Build Squirtle V1.5.1

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install pi-gen dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-user-static \
            binfmt-support \
            quilt \
            debootstrap \
            libarchive-tools \
            arch-test

      - name: Clone pi-gen and inject files
        run: |
          git clone https://github.com/RPi-Distro/pi-gen.git pi-gen

          # Basic image config
          echo IMG_NAME=Squirtle > pi-gen/config
          echo DEPLOY_ZIP=0 >> pi-gen/config
          echo DEPLOY_COMPRESSION=none >> pi-gen/config
          echo ENABLE_RECOMMENDED=0 >> pi-gen/config

          # Remove libreoffice install if it still exists
          rm -rf pi-gen/stage5/00-install-libreoffice || true

          # Copy only etc and usr (NO .github to avoid breaking stage)
          mkdir -p pi-gen/stage1/boot
          cp -r etc usr pi-gen/stage1/
          echo "boot setup skipped" | sudo tee pi-gen/stage1/boot/README.txt

          # Custom cleanup stage
          mkdir -p pi-gen/stage-tempclean
          cat << 'EOF' > pi-gen/stage-tempclean/00-run.sh
          #!/bin/bash -e
          echo "üßº Mid-stage cleanup running..."
          apt-get clean
          rm -rf /var/cache/apt/* /tmp/*
          journalctl --rotate || true
          journalctl --vacuum-time=1s || true
          EOF
          chmod +x pi-gen/stage-tempclean/00-run.sh

          # Define a safe stage order
          echo -e "stage0\nstage1\nstage2\nstage-tempclean\nstage3" > pi-gen/stage-order
          rm -rf pi-gen/stage4 pi-gen/stage5

      - name: Build the image
        run: |
          cd pi-gen

          echo "=== PATCHING BUILD.SH ==="
          # Patch build.sh to avoid crashing on popd
          sed -i '87s|.*|if [ -d "$SCRIPT_DIR/$STAGE_LIST" ]; then pushd "$SCRIPT_DIR/$STAGE_LIST"; else echo "Skipping pushd: $SCRIPT_DIR/$STAGE_LIST is a file."; fi|' build.sh
          sed -i 's|^popd$|if dirs > /dev/null 2>\&1; then popd; fi|' build.sh

          echo "=== STARTING BUILD ==="
          sudo ./build.sh || echo "‚ö†Ô∏è build.sh exited with code $?"

          echo "=== BUILD COMPLETE ==="
          echo "üìÅ Checking output directory:"
          ls -lh deploy || echo "‚ùå No deploy folder found"
          echo "üì¶ Contents of pi-gen/deploy:"
          ls -lh pi-gen/deploy || echo "‚ùå No image was generated"

      - name: Clean up to free disk space before upload
        run: |
          echo "üßπ Cleaning up space to avoid GitHub OOM death..."
          sudo rm -rf pi-gen/work
          sudo rm -rf ~/.cache
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get clean
          sudo journalctl --rotate
          sudo journalctl --vacuum-time=1s

      - name: Upload raw image (.img)
        uses: actions/upload-artifact@v4
        with:
          name: squirtle-v1.5.1-output
          path: pi-gen/deploy/*.img
