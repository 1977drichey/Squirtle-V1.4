name: Build Squirtle V1.5.1

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4  # Updated to v4

      - name: Free up disk space
        run: |
          echo "üßπ Freeing up disk space before build..."
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          sudo apt-get clean
          df -h

      - name: Install pi-gen dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-user-static \
            binfmt-support \
            quilt \
            debootstrap \
            libarchive-tools \
            arch-test \
            kpartx \
            parted

      - name: Clone pi-gen and setup config
        run: |
          git clone https://github.com/RPi-Distro/pi-gen.git pi-gen
          cd pi-gen
          
          # Create proper config file
          cat << 'EOF' > config
          IMG_NAME=Squirtle
          TARGET_HOSTNAME=squirtle
          DEPLOY_ZIP=0
          DEPLOY_COMPRESSION=none
          ENABLE_SSH=1
          FIRST_USER_NAME=pi
          FIRST_USER_PASS=raspberry
          STAGE_LIST="stage0 stage1 stage2"
          EOF
          
          # Show config for debugging
          echo "=== CONFIG FILE ==="
          cat config

      - name: Setup custom stages
        run: |
          cd pi-gen
          
          # Remove problematic stages
          rm -rf stage4 stage5
          
          # Only copy files if they exist in your repo
          if [ -d "../etc" ]; then
            echo "Copying etc directory..."
            cp -r ../etc stage1/ || echo "Warning: Could not copy etc"
          fi
          
          if [ -d "../usr" ]; then
            echo "Copying usr directory..."
            cp -r ../usr stage1/ || echo "Warning: Could not copy usr"
          fi
          
          # Create a simple custom stage for any additional setup
          mkdir -p stage2/99-custom-setup
          cat << 'EOF' > stage2/99-custom-setup/00-run.sh
          #!/bin/bash -e
          echo "Running custom setup..."
          
          # Clean up to save space
          on_chroot << 'CHROOT_EOF'
          apt-get clean
          rm -rf /var/cache/apt/*
          rm -rf /tmp/*
          CHROOT_EOF
          EOF
          chmod +x stage2/99-custom-setup/00-run.sh

      - name: Build the image
        run: |
          cd pi-gen
          
          echo "=== STARTING BUILD ==="
          echo "Current directory: $(pwd)"
          echo "Available stages:"
          ls -la stage*
          
          # Run build with better error handling
          sudo CLEAN=1 ./build.sh 2>&1 | tee build.log || {
            echo "‚ö†Ô∏è Build failed with exit code $?"
            echo "=== BUILD LOG TAIL ==="
            tail -50 build.log
            echo "=== WORK DIRECTORY CONTENTS ==="
            ls -la work/ || echo "No work directory"
            exit 1
          }
          
          echo "=== BUILD COMPLETE ==="

      - name: Check build output
        run: |
          cd pi-gen
          echo "üìÅ Checking deploy directory:"
          ls -lah deploy/ || echo "‚ùå No deploy folder found"
          
          echo "üì¶ Looking for images:"
          find . -name "*.img" -type f | head -10
          
          echo "üíæ Disk usage:"
          df -h

      - name: Clean up before upload
        run: |
          echo "üßπ Cleaning up work directory..."
          sudo rm -rf pi-gen/work
          sudo rm -rf pi-gen/.pc
          sudo apt-get clean

      - name: Upload image
        uses: actions/upload-artifact@v4
        if: always()  # Upload even if there are warnings
        with:
          name: squirtle-v1.5.1-output
          path: |
            pi-gen/deploy/*.img
            pi-gen/deploy/*.zip
            pi-gen/build.log
          retention-days: 30
